{
  "name": "rekuire",
  "version": "0.1.5",
  "description": "'rekuire' is basically node's 'require' without the relative paths",
  "repository": {
    "type": "git",
    "url": "http://github.com/nadav-dav/rekuire.git"
  },
  "main": "./lib/main.js",
  "scripts": {
    "test": "npm install && jasmine-node ./test/"
  },
  "dependencies": {
    "underscore": "*"
  },
  "devDependencies": {
    "fs-extra": "*",
    "jasmine-node": "*",
    "proxyquire": "*"
  },
  "keywords": [
    "require",
    "rekuire ",
    "relative",
    "path",
    "node"
  ],
  "author": {
    "name": "Nadav Dav",
    "email": "nadavik@gmail.com"
  },
  "license": "BSD",
  "readme": "Rekuire [![NPM version](https://badge.fury.io/js/rekuire.png)](http://badge.fury.io/js/rekuire)\n=========\n'rekuire' is basically node's 'require' without the relative paths!\n\nIt saves you TONS of time refactoring your code, and making it easily reusable.\nplus, it makes you code more *readable* = **better!**\n\nInstallation\n-------------\nto install, type\n> ```npm install rekuire```\n\nor add it to your ```package.json``` as a dependency.\n<br/>\n- - - \nWhats new?\n----------\n####0.1.5\n> * fixed a bug that causes failures when scanning a package with higher os privileges (thanks [Danny][danny]!)\n\n####0.1.4\n> * added a method to ignore folders while searching the right files (for example, the js files in the server's static folder)\n\n####0.1.3\n> * you can now rekuire file according to the relative path of the file\n> * added support for *index.js* files inside a folder - can be retrieved by the folder path\n\n####0.1.2\n> * added support for **.coffee** files and **.json**\n\n- - - \n\nHow to use it?\n-----------------\ninstead of doing this: <br/>\n> ```var MyModule = require('../../../MyModule.js');``` *<-- yuck!*\n\nwhy not do this:<br/>\n```\nvar rek = require('rekuire');\nvar myModule = rek('MyModule');\n```\n<br/><br/>\n\nor that:<br/>\n```\nvar myCoffee = rek('MyCoffee.coffee');\nvar myJson = rek('myJson.json');\nvar myModule = rek('src/api/MyModule');\n```\n<br/>\n\n<br/>\n\n\nin order to tell the scanner, not to scan specific folders<br/>\nuse: <br/>\n```\nvar mypath = rek.ignore('out', 'target', 'static/js');\n// you should only do it once in your code\n```\n\n<br/>\n\n\nif you want to resolve only the file location, for example, when you want to use [proxyquire][proxyquire].<br/>\nuse: <br/>\n```\nvar mypath = rek.path('MyModule');\n// mypath = 'lib/classes/MyModule.js' \n```\n\n<br/>\n\nfor more examples, I recommend you to checkout the spec file :)\n\n<br/>\n- - - \n<br/> \n\nwhat does it do?\n----------------\nwhen 'rekuire' is first loaded to the project, it scans the source files locations,\nso when you need them they are right there to use!\nno relative paths are needed! *yeahy!*\n\n<br/>\n- - - \n<br/>\n\nissues\n-------\nif you are having any problems, requests or criticism, don't hesitate to open an [issue, here][issue]\n\n<br/>\n- - - \n<br/> \n\n\n\nDevelopment\n-------------\nTo test, run: ```npm test```\n\n\n[proxyquire]:https://github.com/thlorenz/proxyquire\n[issue]:https://github.com/nadav-dav/rekuire/issues\n[danny]:https://github.com/danyshaanan\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nadav-dav/rekuire/issues"
  },
  "_id": "rekuire@0.1.5",
  "_from": "rekuire@0.1.5"
}
